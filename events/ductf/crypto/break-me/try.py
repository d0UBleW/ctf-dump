from pwn import *
from base64 import b64decode

# nc pwn-2021.duc.tf 31914

p = remote("pwn-2021.duc.tf", 31914)

p.recvuntil(b"Enter plaintext:\n")


dq = b'!'
p.sendline(dq + b"000000000000000a")
# print(p.recvline())
out = p.recvuntil(b"Enter plaintext:\n").split(b"\n")[-3]
out = b64decode(out)
print(out)

p.interactive()
p.close()

# for i in out:
#     print(b64decode(i))

# Output:
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82\x9b\xc5\xd6v\x11\xb0%\xbd\xd9\xfc\x95\x98\xd8ik\x95'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82\xe8\x8b\x99cz:\xdf\x8b)Wy\xa4Q\xc9)\xc4\xc9#\xc0\xb6\xe9\xf0\xf2T\xd2\x9a\xe7\x0b\x8e(\xfbX'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82\x12=\xc2\xc6\xf8\xe36\x89,\\\xd8.`L\xa1\xee[\x94uCznZ\xf35\xcb\x9dx\xa7A\xc9='
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82<\x02\x13\xaa\xb5\x06-7<\xf2\xc4\x88\x9f\xf6R~\xad\xab\x1d;\xd8\xcb\xf7A\xae\x1egz\xefHu\xc7'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82\x99U.tK\x10{\xb3\x14\x0f\xfe\x0f\x0c\xd6\x9c\x88\xf6arFUL\xa2bt\xe3\xb8\xd6j*\xd0r'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82B\xae`2{\xee+\xad\xb1v\x03\x89f\xbaF\xd9\xd1\x19\xc6\x07\x19\r|\x0b\x97p\xb9\x1a\xd0=\xfb\xc6'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82\xeb\xf5\x18\xeb\xbc<\xe5c7\x15j\xaa\xa0\xfb\xb2\xf9\x1d\xa9\x8d\xba\xae\xfc\xee\x896\x83\x8e\xd5\x96\xb3\xaaE'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x822\x87>i\xe6C\xf1M\xedh_{\x8f\xc9_|)y\x00}\x10\x97\xca\x06\x93\x1bs\x1f8G\xfc\xa8'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82\x11H>V\x9f\xfb\x90\x01+\xfd;\x986-\xb8^:\xbc\x94\xa5\xfc\xefq\x7f\xf2\xe6\x98\xe6\x1d~\x07\x84'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82\xe5\x00t%\xd8\xf2\xfdh\xd7\xeb\xa2\x17Y\x15-\xa9A(\x13\xcb<\xda|@\xe0\xc6\xab5]W#w'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82\xe4\xfd\xa8\x17\xdd&\xc9ao\n\x07<\xf1\xe1\xda!\xe8P\xca\x86\xb7\xbe;\x016jy\xd4{(\xb7\\'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82nL\xa8b\xa39\xf5\xf1\x8f\xbb\xb0\xce\xc3\x86ET\xfe\xac\xef\xa1I\x97\xc3\xf1\xe6\x13\xf6>\x17\xa6A\x8c'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82h\x81\xeb\x84\xcb\xce\xa3l\xc7\xb1\x81H\x9c\xfaX\xca<\xe2\xe5\x91\x93\xcb\x1b\x15\xc2\x14]2,|b\xaa'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82\xe6\xd6\xc3\xa8&\x13\xd9+X\xc2\xb7\x8f\x7fw\xc3\xebH7\xb0U\xa4Cn_\xd0\xd2z\xacu\x19\xcf\x02'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82WX\xb1\xa1\xe6\x8f\x92\xb7\xa0\xe1\xb3e\x93\xfc\x9f\x9c\xef\xbb\xa4{!\xfeS\x16\x9b\xa7s\xe2X\x90/d'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82N2<\xedH\x98N\xd6\xae!x\xf2gX\xaa;\xa7l\xd3_P(\xe24\x07Q\xab\x84\xcb+\x83\xac'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82\xeej\x02\xbf\xfaa\xe5\\\xd0\xee\x9c9T\x94F\xaa\x9b\xc5\xd6v\x11\xb0%\xbd\xd9\xfc\x95\x98\xd8ik\x95'
# b'\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82\xeej\x02\xbf\xfaa\xe5\\\xd0\xee\x9c9T\x94F\xaa\xe8\x8b\x99cz:\xdf\x8b)Wy\xa4Q\xc9)\xc4\xc9#\xc0\xb6\xe9\xf0\xf2T\xd2\x9a\xe7\x0b\x8e(\xfbX'

# key = b"\xeej\x02\xbf\xfaa\xe5\\\xd0\xee\x9c9T\x94F\xaa"
# enc_flag = b"\xf0\xc0*\xde\x91\xac\xef\xf2\x93r\xfd\x1c\xde(\xeaL\x98o\xff?U\xf1\x00;\x97\xd4\xe42E;\xd9\x82"

# key = int.from_bytes(key, "big")

# for i in range(0, len(enc_flag), 16):
#     frag = int.from_bytes(enc_flag[i:i+16], "big")
#     val = (frag ^ key).to_bytes(16, "big")
#     print(val, end='')
